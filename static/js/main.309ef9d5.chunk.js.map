{"version":3,"sources":["solver.ts","App.tsx","reportWebVitals.js","index.js"],"names":["puzzleByType","LEFT","CENTER","items","rotate","item","n","length","m","ret","i","push","j","map","v","join","flip","itemMasks","uniqBy","x","itemDirections","masks","originMaskString","mask","itemMaskString","indexOf","console","log","firstXCols","solve","board","solution","count","canPlace","index","row","Math","floor","col","firstXCol","r","c","place","unPlace","dfs","s","monthNames","weekdayNames","Calendar","this","props","type","month","day","weekday","onChange","className","range","onClick","d","w","React","PureComponent","SolutionView","colors","direction","hwDiff","needDiff","style","top","left","width","height","transform","data-direction","flatten","split","_1","backgroundColor","App","state","Date","getMonth","getDate","getDay","solutions","handleChange","setState","handleTypeChange","href","marginLeft","color","min","max","value","e","parseInt","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.309ef9d5.chunk.js","sourcesContent":["import { uniqBy } from 'lodash'\r\n\r\n// 7 x 7\r\nexport const puzzleByType = {\r\n  LEFT: [\r\n    '......x',\r\n    '......x',\r\n    '.......',\r\n    '.......',\r\n    '.......',\r\n    '.......',\r\n    '.......',\r\n    'xxxx...',\r\n  ],\r\n  CENTER: [\r\n    'x.....x',\r\n    '.......',\r\n    '.......',\r\n    '.......',\r\n    '.......',\r\n    '.......',\r\n    '.......',\r\n    'xxxx...',\r\n  ],\r\n}\r\n\r\nexport const ROWS = 8\r\nexport const COLS = 7\r\n\r\n// 10\r\nexport const items = [\r\n  [\r\n    'x...',\r\n    'xxxx',\r\n  ],\r\n  [\r\n    'x..',\r\n    'xxx',\r\n    '..x',\r\n  ],\r\n  [\r\n    '..xx',\r\n    'xxx.',\r\n  ],\r\n  [\r\n    'xxxx',\r\n  ],\r\n  [\r\n    '.xx',\r\n    'xxx',\r\n  ],\r\n  [\r\n    'xxx',\r\n    'x.x',\r\n  ],\r\n  [\r\n    '.xx',\r\n    'xx.',\r\n  ],\r\n  [\r\n    'x..',\r\n    'x..',\r\n    'xxx',\r\n  ],\r\n  [\r\n    'xxx',\r\n    'x..',\r\n  ],\r\n  [\r\n    'xxx',\r\n    '.x.',\r\n    '.x.',\r\n  ],\r\n]\r\n\r\nconst rotate = (item: string[]) => {\r\n  const n = item.length\r\n  const m = item[0].length\r\n  const ret: any[] = []\r\n  for (let i = 0; i < m; ++i) {\r\n    ret.push([])\r\n    for (let j = 0; j < n; ++j) {\r\n      ret[i].push(item[j][m - i - 1])\r\n    }\r\n  }\r\n  return ret.map(v => v.join(''))\r\n}\r\n\r\nconst flip = (item: string[]) => {\r\n  const n = item.length\r\n  const m = item[0].length\r\n  const ret: any[] = []\r\n  for (let i = 0; i < m; ++i) {\r\n    ret.push([])\r\n    for (let j = 0; j < n; ++j) {\r\n      ret[i].push(item[j][i])\r\n    }\r\n  }\r\n  return ret.map(v => v.join(''))\r\n}\r\n\r\n// 10 * ? * ['???','???']\r\nexport const itemMasks = items.map(item => {\r\n  const ret = [\r\n    item,\r\n  ]\r\n  // rotate\r\n  for (let i = 1; i < 4; ++i) {\r\n    ret.push(rotate(ret[i - 1]))\r\n  }\r\n  for (let i = 4; i < 8; ++i) {\r\n    ret.push(flip(ret[i - 4]))\r\n  }\r\n  return uniqBy(ret, x => x.join('\\n'))\r\n})\r\n\r\n// 10 * ?\r\nexport const itemDirections = items.map((item, i) => {\r\n  const masks = [\r\n    item,\r\n  ]\r\n  // rotate\r\n  for (let i = 1; i < 4; ++i) {\r\n    masks.push(rotate(masks[i - 1]))\r\n  }\r\n  for (let i = 4; i < 8; ++i) {\r\n    masks.push(flip(masks[i - 4]))\r\n  }\r\n  const originMaskString = masks.map(mask => mask.join('\\n'))\r\n  const itemMaskStrings = itemMasks[i].map(mask => mask.join('\\n'))\r\n  return itemMaskStrings.map(itemMaskString => originMaskString.indexOf(itemMaskString))\r\n})\r\n\r\nconsole.log(itemMasks)\r\nconsole.log(itemDirections)\r\n\r\n// 10 * ?\r\nexport const firstXCols = itemMasks.map(masks => masks.map(mask => mask[0].indexOf('x')))\r\n\r\n\r\nexport function solve(board: string[][]) {\r\n  const ret: ({ index: number, j: number })[][] = []\r\n  const solution: ({ index: number, j: number } | null)[] = items.map(() => null)\r\n  let count = 0\r\n  const canPlace = (index: number, i: number, j: number) => {\r\n    const row = Math.floor(index / COLS)\r\n    const col = index % COLS\r\n    const mask = itemMasks[i][j]\r\n    const n = mask.length\r\n    const m = mask[0].length\r\n    const firstXCol = firstXCols[i][j]\r\n    if (row + n > ROWS) {\r\n      return false\r\n    }\r\n    if (col - firstXCol < 0 || col + m - firstXCol > COLS) {\r\n      return false\r\n    }\r\n    for (let r = 0; r < n; ++r) {\r\n      for (let c = 0; c < m; ++c) {\r\n        if (mask[r][c] === 'x' && board[row + r][col + c - firstXCol] === 'x') {\r\n          return false\r\n        }\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n  const place = (index: number, i: number, j: number) => {\r\n    const row = Math.floor(index / COLS)\r\n    const col = index % COLS\r\n    const mask = itemMasks[i][j]\r\n    const n = mask.length\r\n    const m = mask[0].length\r\n    const firstXCol = firstXCols[i][j]\r\n    for (let r = 0; r < n; ++r) {\r\n      for (let c = 0; c < m; ++c) {\r\n        if (mask[r][c] === 'x') {\r\n          board[row + r][col + c - firstXCol] = 'x'\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const unPlace = (index: number, i: number, j: number) => {\r\n    const row = Math.floor(index / COLS)\r\n    const col = index % COLS\r\n    const mask = itemMasks[i][j]\r\n    const n = mask.length\r\n    const m = mask[0].length\r\n    const firstXCol = firstXCols[i][j]\r\n    for (let r = 0; r < n; ++r) {\r\n      for (let c = 0; c < m; ++c) {\r\n        if (mask[r][c] === 'x') {\r\n          board[row + r][col + c - firstXCol] = '.'\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  const dfs: any = (index: number) => {\r\n    count += 1\r\n    const row = Math.floor(index / COLS)\r\n    const col = index % COLS\r\n    if (row >= ROWS) {\r\n      ret.push(solution.map(s => s!))\r\n      return true\r\n    }\r\n    if (board[row][col] === 'x') {\r\n      return dfs(index + 1)\r\n    }\r\n    for (let i = 0; i < items.length; ++i) {\r\n      if (!solution[i]) {\r\n        for (let j = 0; j < itemMasks[i].length; ++j) {\r\n          if (canPlace(index, i, j)) {\r\n            place(index, i, j)\r\n            solution[i] = { index, j }\r\n            dfs(index + 1)\r\n            solution[i] = null\r\n            unPlace(index, i, j)\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  dfs(0)\r\n  console.log(`Number of searches: ${count}`)\r\n  return ret\r\n}\r\n","import React from 'react'\r\nimport './App.css'\r\nimport { flatten, range } from 'lodash'\r\nimport { COLS, firstXCols, itemDirections, items, puzzleByType, solve } from './solver'\r\n\r\ntype puzzleType =\r\n  | 'LEFT'\r\n  | 'CENTER'\r\n\r\n\r\nlet monthNames = [\r\n  'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\r\n  'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec',\r\n]\r\n\r\nlet weekdayNames = [\r\n  'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat',\r\n]\r\n\r\nclass Calendar extends React.PureComponent<{\r\n  type: puzzleType,\r\n  month: number,\r\n  day: number,\r\n  weekday: number,\r\n  onChange: (params: { month: number, day: number, weekday: number }) => any\r\n}> {\r\n  render() {\r\n    const { type, month, day, weekday, onChange } = this.props\r\n    return (\r\n      <div className=\"Calendar\">\r\n        {type === 'LEFT' && (\r\n          <>\r\n            {range(0, 6).map(m => (\r\n              <div\r\n                className={`item month ${month === m ? 'selected' : ''}`}\r\n                key={m}\r\n                onClick={() => onChange({ month: m, day, weekday })}\r\n              >\r\n                {monthNames[m]}\r\n              </div>\r\n            ))}\r\n            <div className=\"item empty\" />\r\n            {range(6, 12).map(m => (\r\n              <div\r\n                className={`item month ${month === m ? 'selected' : ''}`}\r\n                key={m}\r\n                onClick={() => onChange({ month: m, day, weekday })}\r\n              >\r\n                {monthNames[m]}\r\n              </div>\r\n            ))}\r\n            <div className=\"item empty\" />\r\n          </>\r\n        )}\r\n        {type === 'CENTER' && (\r\n          <>\r\n            <div className=\"item empty\" />\r\n            {range(0, 5).map(m => (\r\n              <div\r\n                className={`item month ${month === m ? 'selected' : ''}`}\r\n                key={m}\r\n                onClick={() => onChange({ month: m, day, weekday })}\r\n              >\r\n                {monthNames[m]}\r\n              </div>\r\n            ))}\r\n            <div className=\"item empty\" />\r\n            {range(5, 12).map(m => (\r\n              <div\r\n                className={`item month ${month === m ? 'selected' : ''}`}\r\n                key={m}\r\n                onClick={() => onChange({ month: m, day, weekday })}\r\n              >\r\n                {monthNames[m]}\r\n              </div>\r\n            ))}\r\n          </>\r\n        )}\r\n\r\n        {range(1, 32).map(d => (\r\n          <div\r\n            className={`item ${day === d ? 'selected' : ''}`}\r\n            key={d}\r\n            onClick={() => onChange({ month, day: d, weekday })}\r\n          >\r\n            {d}\r\n          </div>\r\n        ))}\r\n\r\n        {range(0, 4).map(w => (\r\n          <div\r\n            className={`item ${weekday === w ? 'selected' : ''}`}\r\n            key={w}\r\n            onClick={() => onChange({ month, day, weekday: w })}\r\n          >\r\n            {weekdayNames[w]}\r\n          </div>\r\n        ))}\r\n\r\n        <div className=\"item empty\" />\r\n        <div className=\"item empty\" />\r\n        <div className=\"item empty\" />\r\n        <div className=\"item empty\" />\r\n\r\n        {range(4, 7).map(w => (\r\n          <div\r\n            className={`item ${weekday === w ? 'selected' : ''}`}\r\n            key={w}\r\n            onClick={() => onChange({ month, day, weekday: w })}\r\n          >\r\n            {weekdayNames[w]}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass SolutionView extends React.PureComponent<{\r\n  solution: { index: number, j: number } [],\r\n}> {\r\n  colors = [\r\n    '#6B7280',\r\n    '#EF4444',\r\n    '#F59E0B',\r\n    '#10B981',\r\n    '#3B82F6',\r\n    '#6366F1',\r\n    '#8B5CF6',\r\n    '#EC4899',\r\n    '#48EC99',\r\n    '#4899EC',\r\n  ]\r\n\r\n  render() {\r\n    const { solution } = this.props\r\n\r\n    return (\r\n      <div className=\"SolutionView\">\r\n        {items.map((item, i) => {\r\n          const { index, j } = solution[i]\r\n          const row = Math.floor(index / COLS)\r\n          const col = index % COLS\r\n          const firstXCol = firstXCols[i][j]\r\n          const direction = itemDirections[i][j]\r\n\r\n          const hwDiff = item.length - item[0].length\r\n          const needDiff = (direction === 1 || direction === 3 || direction === 4 || direction === 6)\r\n          return (\r\n            <div\r\n              key={i}\r\n              className=\"SolutionViewItem\"\r\n              style={{\r\n                top: row * 50,\r\n                left: (col - firstXCol) * 50,\r\n                width: item[0].length * 50,\r\n                height: item.length * 50,\r\n                transform: [\r\n                  `translate3d(${needDiff ? hwDiff * 25 : 0}px, ${needDiff ? hwDiff * -25 : 0}px, 0px)`,\r\n                  `rotate3d(1, 1, 0, ${Math.floor(direction / 4) * 180}deg)`,\r\n                  `rotate3d(0, 0, 1, -${direction % 4 * 90}deg)`,\r\n                ].join(' '),\r\n              }}\r\n              data-direction={direction}\r\n            >\r\n              {flatten(\r\n                item.map((s, r) => s.split('').map(\r\n                  (_1, c) => (\r\n                    <div\r\n                      key={`${r}_${c}`}\r\n                      className=\"SolutionViewCell\"\r\n                      style={item[r][c] === 'x' ? { backgroundColor: this.colors[i] } : {}}\r\n                    />\r\n                  )),\r\n                ),\r\n              )}\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass TypeSwitch extends React.PureComponent<{\r\n  value: puzzleType,\r\n  onChange: (type: puzzleType) => any,\r\n}> {\r\n  render() {\r\n    const { value, onChange } = this.props\r\n    return (\r\n      <div className=\"TypeSwitch\">\r\n        <div\r\n          className={`TypeSwitchItem ${value === 'LEFT' ? 'selected' : ''}`}\r\n          onClick={() => onChange('LEFT')}\r\n        >\r\n          Original\r\n        </div>\r\n        <div\r\n          className={`TypeSwitchItem ${value === 'CENTER' ? 'selected' : ''}`}\r\n          onClick={() => onChange('CENTER')}\r\n        >\r\n          Revised\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\ntype AppState = {\r\n  type: puzzleType,\r\n  month: number, // 0 - 11\r\n  day: number, // 1 - 31\r\n  weekday: number, // 0 - 6\r\n  solutions: { index: number, j: number }[][],\r\n  index: number,\r\n}\r\n\r\nexport default class App extends React.PureComponent<{}, AppState> {\r\n  solve = (type: puzzleType, month: number, day: number, weekday: number) => {\r\n    const board = puzzleByType[type].map(row => row.split(''))\r\n    if (type === 'LEFT') {\r\n      board[Math.floor(month / 6)][month % 6] = 'x'\r\n    }\r\n    if (type === 'CENTER') {\r\n      if (month < 5) {\r\n        board[0][month + 1] = 'x'\r\n      } else {\r\n        board[1][month - 5] = 'x'\r\n      }\r\n    }\r\n    board[Math.floor((day - 1) / 7) + 2][(day - 1) % 7] = 'x'\r\n    if (weekday < 4) {\r\n      board[6][weekday + 3] = 'x'\r\n    } else {\r\n      board[7][weekday] = 'x'\r\n    }\r\n    return solve(board)\r\n  }\r\n\r\n  state: AppState = {\r\n    type: 'LEFT',\r\n    month: new Date().getMonth(), // 0 - 11\r\n    day: new Date().getDate(), // 1 - 31\r\n    weekday: new Date().getDay(), // 0 - 6\r\n    solutions: this.solve('LEFT', new Date().getMonth(), new Date().getDate(), new Date().getDay()),\r\n    index: 0,\r\n  }\r\n\r\n  handleChange = ({ month, day, weekday }: { month: number, day: number, weekday: number }) => this.setState(({ type }) => ({\r\n    month, day, weekday, solutions: this.solve(type, month, day, weekday), index: 0,\r\n  }))\r\n\r\n  handleTypeChange = (type: puzzleType) => this.setState(({ month, day, weekday }) => ({\r\n    type, solutions: this.solve(type, month, day, weekday), index: 0,\r\n  }))\r\n\r\n  render() {\r\n    const { type, month, day, weekday, solutions, index } = this.state\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>\r\n          Calendar Puzzle Solver\r\n        </h1>\r\n        <div>\r\n          <a href=\"https://poodlepuzzle.com/products/daily-calendar-puzzle?variant=39685475074107\">Buy the Puzzle</a>\r\n          <a href=\"https://github.com/joewhaley/calendar-puzzle-solver\" style={{ marginLeft: 16 }}>Github Repo</a>\r\n        </div>\r\n        {/*<TypeSwitch value={type} onChange={this.handleTypeChange} />*/}\r\n        <div className=\"Container\">\r\n          <Calendar type={type} month={month} day={day} weekday={weekday} onChange={this.handleChange} />\r\n          {solutions[index] && <SolutionView solution={solutions[index]} />}\r\n        </div>\r\n        <div style={{ color: '#333' }}>\r\n          {`${weekdayNames[weekday]}, ${monthNames[month]} ${day}`}\r\n        </div>\r\n        {solutions.length > 0\r\n          ? (\r\n            <div style={{ color: '#333' }}>\r\n              Solution #<input\r\n                type=\"number\"\r\n                min=\"1\"\r\n                max={solutions.length}\r\n                value={index + 1}\r\n                onChange={e => this.setState({ index: parseInt(e.target.value, 10) - 1 })}\r\n              /> out of {solutions.length} total.\r\n            </div>\r\n          )\r\n          : (\r\n            <div>No solutions???!!</div>\r\n          )}\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}